[
{
	"uri": "/research/",
	"title": "Research",
	"tags": [],
	"description": "",
	"content": "  Survey: Students  The students of Universities implementing ROT systems are the major users and as such their views should play a pivotal role in the design and implementation of such systems.\n Interview: Students  These interviews were conducted with a varied group of students both familiar and unfamiliar with Internet of Things devices (Alexa, Apple Watches, Google Home etc) who attend the University of Birmingham.\n Interview: University Staff  This interview was conducted with a member of staff at the university who has experience with the current occupancy system.\n Interview: Developer  This interview was conducted with a software developer who has experience developing on top of a range of IoT devices.\n Focus Group: Office workers  This focus group was targeted at staff from a large firm that made use of hot desking throughout a multistory building.\n Persona: Peter  Peter is a humanities student who has a low number of contact hours\n Persona: Ricardo  Ricardo is a Computer Science Student who needs lab machines for assignments\n UI Layout  An in-depth look into layout\n Occupancy Data Interpretation  A look into representing occupancy\n Physical Design  Blending In\n Current Solutions  Systems currently in the market that provide ROT services\n "
},
{
	"uri": "/research/student/",
	"title": "Survey: Students",
	"tags": [],
	"description": "The students of Universities implementing ROT systems are the major users and as such their views should play a pivotal role in the design and implementation of such systems.",
	"content": "From the interview conducted here we can see that the current system fails to live up to the expectation of the main user-group, leaving a lot of room for improvement for our service.\nDo you currently use the University\u0026rsquo;s room occupancy tracking system? No Why wouldn\u0026rsquo;t you use the current system, if not? Have you ever used it? If \u0026lsquo;Yes\u0026rsquo;, what is the main reason you no longer use it? Yes Do you like the current system? Does it cover all the study spaces you use regularly? If not, where would you like to see it extended to? Have you ever attempted to use the current system, but found it to be unavailable? Have you ever found the current system to be slow? Have you ever found the current system to be unreliable? Through what medium would you prefer to access room occupancy information? Analysis Of those respondents that do not use the current system, the majority did not because they were not aware of its existence. This is an issue we could address by use of a form of advertisement campaign such as via the University\u0026rsquo;s Instagram or other social media accounts. There were also people identifying with each one of the other options regarding poor service from the current system.\nThose who had used the system before but had stopped complained of lack of coverage and lack of useful information such as opening times.\nThe majority of those who said they currently used the system said they did not like it. The same proportion also said that the current system does not cover all the spaces they regularly use, wanting the system to be extended to areas such as Sloman Lounge or University labs.\n100% of respondents who use the system said they had found it to be unavailable before, this raises a significant issue with the reliably of the system, an area we should strive to improve upon. 80% also said they had found the current system to be slow, another area where our solution can offer improvement.\nThe accuracy of the current system was also challenged with 0% sayign they felt the system was accurate.\nPeople also said they wanted the data to be available to them via a website and mobile app above the other options given to them.\n"
},
{
	"uri": "/prototyping/basic-demo/",
	"title": "Basic InfluxDB implementation",
	"tags": [],
	"description": "",
	"content": "After our initial research into InfluxDB and it\u0026rsquo;s client libraries, we decided to complete a trial implementation using Golang as it offered a fast, compiled language that lent itself well to embedded systems and has excellent networking and json parsing libraries.\npackage main import ( \u0026#34;context\u0026#34; \u0026#34;encoding/json\u0026#34; \u0026#34;fmt\u0026#34; \u0026#34;io/ioutil\u0026#34; \u0026#34;log\u0026#34; \u0026#34;net/http\u0026#34; \u0026#34;os\u0026#34; \u0026#34;time\u0026#34; fsnotify \u0026#34;github.com/fsnotify/fsnotify\u0026#34; influxdb \u0026#34;github.com/influxdata/influxdb-client-go\u0026#34; ) var INFLUX_TOKEN string func DBConnect() (*influxdb.Client, error) { client := http.Client{} return influxdb.New(\u0026#34;https://us-central1-1.gcp.cloud2.influxdata.com\u0026#34;, INFLUX_TOKEN, influxdb.WithHTTPClient(\u0026amp;client)) } type SensorReport struct { CO2 float64 `json:\u0026#34;CO2\u0026#34;` Temperature float64 `json:\u0026#34;Temperature\u0026#34;` } func main() { DBConnect() influx, err := DBConnect() if err != nil { panic(err) } watch_sensors(influx) } func watch_sensors(influx *influxdb.Client) { watcher, err := fsnotify.NewWatcher() if err != nil { fmt.Println(\u0026#34;ERROR\u0026#34;, err) } defer watcher.Close() done := make(chan bool) // \tgo func() { for { select { // watch for events \tcase event := \u0026lt;-watcher.Events: fmt.Printf(\u0026#34;EVENT! %#v\\n\u0026#34;, event) readings, err := os.Open(\u0026#34;sensor-readings.json\u0026#34;) if err != nil { log.Fatal(err) } defer readings.Close() var report SensorReport fileBytes, err := ioutil.ReadAll(readings) if err != nil { log.Fatal(err) } json.Unmarshal(fileBytes, \u0026amp;report) fmt.Printf(\u0026#34;%+v\\n\u0026#34;, report) myMetric := []influxdb.Metric{ influxdb.NewRowMetric( map[string]interface{}{\u0026#34;CO2\u0026#34;: report.CO2, \u0026#34;temperature\u0026#34;: report.Temperature}, \u0026#34;Sensor Readings\u0026#34;, map[string]string{\u0026#34;Hostname\u0026#34;: \u0026#34;TestBox1\u0026#34;}, time.Now()), } _, err = influx.Write(context.Background(), \u0026#34;my-test-bucket\u0026#34;, \u0026#34;833c7fbc1d19c9be\u0026#34;, myMetric...) if err != nil { log.Fatal(err) } watch_sensors(influx) case err := \u0026lt;-watcher.Errors: fmt.Println(\u0026#34;ERROR\u0026#34;, err) } } }() // out of the box fsnotify can watch a single file, or a single directory \tif err := watcher.Add(\u0026#34;sensor-readings.json\u0026#34;); err != nil { fmt.Println(\u0026#34;ERROR\u0026#34;, err) } \u0026lt;-done } Contents of sensor-readings.json { \u0026#34;CO2\u0026#34;: 0.2, \u0026#34;Temperature\u0026#34;: 23 } The code above watches for changes in a given file sensor-readings.json and upon changes unmarshals the contents to a Go struct. This struct is then used to fill out a influxDB metric for writing to a given bucket. This code is a proof of concept, showing that if we were to record sensor data to a json structured format, we could easily and reliably push this data to our database retaining its structure and time sensitive nature. Running this script results in the following results being displayed from within InfluxDBs query dashboard:\nAnother advantage of a compiled language such as Go, is that we can make use of compile time variable injection to embed sensitive information such as our database access token into the binary which can then be placed on our embedded system without the need for a plaintext version of the token to be stored on these devices in the public domain. Go also produces a statically linked compiled binary allowing for it to be run on any supporting system without additional software or libraries to be installed along with it.\n"
},
{
	"uri": "/conceptualdesign/device-design-ideas/",
	"title": "Device Design Ideas",
	"tags": [],
	"description": "Investigating different approaches and the hardware/ software systems they would require",
	"content": "There are 3 major sensor-based approaches we have considered pursuing.\n Entryway traffic-based tracking Per-table based tracking Ambient environment tracking  Notice that all of these approaches are relatively non-invasive, with none requiring the use of cameras.\nEntryway traffic tracking This proposed system would work via a doorway mounted laser depth sensor. By mounting the sensor at a (known) angle, we can calculate the direction of travel of an individual. This simple sensor and post-processing algorithm would allow us to maintain a record of entrances and exits from a given doorway and with a backing system aware of the relative positions of the devices, we could extrapolate numbers of people in each building or room. This system requires no camera or personal data to be collected and only one sensor per device, relatively low in cost.\nPer-table tracking This system would be quite similar to the one currently implemented, with under-table mounted laser sensors allowing the system to accurately determine how many people are surrounding the given area. A downside to this is it\u0026rsquo;s expensive, with each table in a given space requiring a sensor array and a computer to process and upload the data. This system also does not work for spaces that have non-standard seating arrangements such as single seat booths found in the library and Aston Webb building.\nAmbient environment Tracking This system would rely on the gathering of metrics such as ambient temperature, humidity or CO2 levels in order to extrapolate ,via heuristics,the number of people in a given space. This system would be more expensive per unit due to the requirement of several delicate sensors. However, it would allow for a more subtle placement not requiring a location above a doorway or under a table. It\u0026rsquo;s accuracy would, however, be dependent on experimentation on a case by case basis as occupancies can lead to wildly different readings, based on multitude of factors such as: size of room, whether windows are open, whether the heating is on etc.\n"
},
{
	"uri": "/technicaldesign/softwaretooling/",
	"title": "Software tooling",
	"tags": [],
	"description": "",
	"content": "Data Representation \u0026amp; Storage InfluxDB InfluxDB, 2.0 specifically, is a prime candidate for the storage solution to a project such as ours. Specialising in the storage of time series data, the use of one of their databases would allow us to easily store sensor data in time order and parse to provide accurate, real-time statistics to our end users. SQL based approaches such as PostgreSQL are not built for storing real-time information and as such they introduce significant overhead causing great difficulty in creating real-time systems such as ours.\nFeaturing heavy Grafana integration in the newest 2.0 version, the representation of data to the developer is very clear and easy to work with. Clearly the data stored in the database would require post-processing in order to derive the occupancy of a given room as data such as ambient temperature or CO2 readings are not of interest to the user.\nInterfacing Querying an InfluxDB Database requires the use of their own query language (InfluxQL). They also provide client libraries for C#, Golang, Java, Javascript/Node.js, Python and Ruby.\nFor the case of pushing data to our database from an embedded system such as a raspberry Pi or Arduino, the use of a lighter-weight, compiled language such as C# or Golang might be better. Further, server-side processing of the data need-not use the same language and such a task may lend itself more to a language such as Python.\nGrafana Grafana is an open source solution to easily creating read-outs and dashboards for presenting data to either system administrators or end-users. Its integration with InfluxDB would allow for a canonical solution to data representation throughout our product.\nGrafana allows for many presentations of data, and is extensible via a (Java/Type)script API which would allow us to create custom graphs such as heatmap overlays for presenting occupancy visually in relation to location.\nThe ability to present the data with a wide variety of visuals will allow for less technical users to easily grasp the concepts without having to necessarily read off charts or graphs, expanding our audience and stopping people from being put off using our service.\n"
},
{
	"uri": "/conceptualdesign/",
	"title": "Conceptual Design",
	"tags": [],
	"description": "",
	"content": "  Device Design Ideas  Investigating different approaches and the hardware/ software systems they would require\n Topologies  Early technical proposals\n What data do we want to show?  Given our research, what information do our potential clients and end-users want to see?\n User Interface  A look into the design of user interfaces\n "
},
{
	"uri": "/research/university-students/",
	"title": "Interview: Students",
	"tags": [],
	"description": "These interviews were conducted with a varied group of students both familiar and unfamiliar with Internet of Things devices (Alexa, Apple Watches, Google Home etc) who attend the University of Birmingham.",
	"content": "Are you familiar with the current room occupancy system the University implements? Student A: Yes, I\u0026rsquo;ve used a library room booking system as well as to check general availability in the Library during study periods.\nStudent B: No - none of my study spaces implement or advertise this.\nStudent C: Nah - never heard of it.\nStudent D: I\u0026rsquo;ve seen it advertised on the library page but I have never used it - I don\u0026rsquo;t know how really.\nStudent E: I used it once for the main library during study season - it said 30% free but I couldn\u0026rsquo;t find a seat for 40 mins. Haven\u0026rsquo;t used it since.\nStudent F: It\u0026rsquo;s pretty useless for finding a seat - it only says the percentage of full capacity. This doesn\u0026rsquo;t really help me find a place to study.\nStudent G: Yeah I usually check it before I go to the Barnes library - it\u0026rsquo;s not always right but can be a good general indicator.\nWhat similar systems have you used before? Student A: I interned during the summer at a Tech company which utilised room occupancy to track free space to work and organise meetings.\nStudent B: My part-time job uses vehicle tracking in a car park to alert users to free space.\nStudent C: I\u0026rsquo;ve never really used systems like this.\nStudent D: My local library in Brighton has an app that says how free it is.\nStudent E: I don\u0026rsquo;t think I\u0026rsquo;ve used this sort of thing before.\nStudent F: Does a cinema seat booking service count? That\u0026rsquo;s obviously something that\u0026rsquo;s quite important for going to the cinema - you can\u0026rsquo;t go if you don\u0026rsquo;t have a seat free.\nStudent G: You can book tables at my local library for group study sessions.\nWhat did you think of them? Student A: It was really handy for organising meetings with my supervisor and just finding some free space.\nStudent B: I think it\u0026rsquo;s a pretty good system - it stops a lot of traffic building up in the car park.\nStudent C: It would be useful but as I said I haven\u0026rsquo;t used anything like it.\nStudent D: It\u0026rsquo;s good for the Summer, but a lot of time it takes an hour or two to update so it makes it obselete by lunchtime.\nStudent E: n/a\nStudent F: It\u0026rsquo;s pretty essential for the service - but thinking about it, it would be quite handy in my office.\nStudent G: It\u0026rsquo;s handy when available but usually they\u0026rsquo;re booked many weeks in advance.\nWould mobile or web integration be important to you, in such a product? Student A: Absolutely - any sort of web or mobile app integration for study space on campus would be incredibly useful and accessible.\nStudent B: Yes - I think that would be the quickest way to check for a study space - handy also as most students use their phones all the time.\nStudent C: Yeah definitely - I\u0026rsquo;m always on my phone.\nStudent D: If there were features such as setting push notifications for when space becomes available then it would be excellent.\nStudent E: Not really, I don\u0026rsquo;t use my phone much - especially during my study time.\nStudent F: Yeah I would really like that idea.\nStudent G: If it was reliable. Most mobile apps aren\u0026rsquo;t.\nWhat ethical concerns do you have about \u0026lsquo;Internet of Things\u0026rsquo; devices that you interact with everyday? Student A: It has become a bit of a joke online - how Google or Amazon\u0026rsquo;s suggestions can mirror your thoughts and with assistant products like the Google Home listening to you constantly - I got rid of my assistant for this reason - privacy is essential.\nStudent B: I don\u0026rsquo;t really care as long as my personal information isn\u0026rsquo;t being sold and mined by companies outside of what I gave it away for.\nStudent C: I saw that thing about Huawei in the news - something about tracking all your data on your phone. That\u0026rsquo;s why I have an iPhone.\nStudent D: I don\u0026rsquo;t use any IoT devices.\nStudent E: I try and keep my privacy to the maximum - I\u0026rsquo;ve switched from Whatsapp to telegram for encrypted communications etc. I am quite concerned with the directions we are going with digital assistants.\nStudent F: I\u0026rsquo;m really not that fussed - I don\u0026rsquo;t have anything to hide. I love Siri and use it daily.\nStudent G: As long as they don\u0026rsquo;t store my personal stuff then I\u0026rsquo;m okay with it.\nWould sensors for room occupancy tracking concern you? Student A: As long as it isn\u0026rsquo;t extended to be used to track specific people then it seems okay.\nStudent B: No not really - the concept doesn\u0026rsquo;t seem as intrusive as CCTV and it stores no personal tracking information.\nStudent C: Not at all.\nStudent D: I would prefer not to be tracked but as long as it can\u0026rsquo;t be used to identify people then it\u0026rsquo;s fine.\nStudent E: Not really - I would be concerned with cameras.\nStudent F: No\nStudent G: Yeah - if they were taking loads of photos I wouldn\u0026rsquo;t really like to go there - I look like trash in the library!\nWhat features would our product have to have in order for you to use it over current solutions or just not checking availability? Student A: As the main point of use for the product would be in order to save my time, it would have to give me results quickly and accurately.\nStudent B: As long as it\u0026rsquo;s not slow and is easy to access, I would use this device.\nStudent C: Maybe predictions for when\u0026rsquo;s best to go to the library?\nStudent D: As long as it\u0026rsquo;s fast I would use it.\nStudent E: Notifications - I don\u0026rsquo;t wanna be checking every 10 minutes.\nStudent F: If it does what you\u0026rsquo;re describing - it sounds fine as is.\nStudent G: Maybe a way to share a specific spot with friends when making study plans?\nDo you see yourself using this product, should it be implemented in University? Student A: Absolutely. I would use it daily during exam season.\nStudent B: If I am finding it difficult to find a place to work then yes.\nStudent C: 100%\nStudent D: I don\u0026rsquo;t think it would be that useful currently for myself as I work in labs - but for other students I think it would be a good idea.\nStudent E: Yes I would - I\u0026rsquo;m constantly in the library in exam season and spend a lot of time finding a seat, maybe this would make it harder if everyone knows where the free seats are however.\nStudent F: Yeah definitely - something like that I would use more than Canvas.\nStudent G: If it worked well - yeah!\nAnalysis These interviews demonstrate how aware current students are of data privacy - how the intended solution should be sleek, unintrusive and accessible - preferably via the web or mobile apps. The results should be accurate in relative real-time and also be fast as the basis for the product is to save time and improve efficiency. We also managed to canvas some ideas for the solution and reinforce some of our own previous ideas - multiple students seemed enthusiastic about push notifications for availability and metrics for availibility prediction - these could be promising not only for University environments, but also corporate statistics. For example, examining foottraffic in supermarkets and analysing to predict where to put the biggest money making products.\n"
},
{
	"uri": "/technicaldesign/",
	"title": "Technical Design",
	"tags": [],
	"description": "",
	"content": "  Software tooling  Data Representation \u0026amp; Storage InfluxDB InfluxDB, 2.0 specifically, is a prime candidate for the storage solution to a project such as ours. Specialising in the storage of time series data, the use of one of their databases would allow us to easily store sensor data in time order and parse to provide accurate, real-time statistics to our end users. SQL based approaches such as PostgreSQL are not built for storing real-time information and as such they introduce significant overhead causing great difficulty in creating real-time systems such as ours.\n "
},
{
	"uri": "/conceptualdesign/topologies/",
	"title": "Topologies",
	"tags": [],
	"description": "Early technical proposals",
	"content": "In the most abstract sense our current design consists of the following:\ngraph LR; A[Sensors] -- B[Processing] B[Processing] -- C[Insights]   As follows are early technical architecture propositions.\n Sensor Mesh  Inter connected sensors relaying data across the mesh to a processing node\n Worker Sensors  Sensors feed directly into processing system\n "
},
{
	"uri": "/research/university-staff/",
	"title": "Interview: University Staff",
	"tags": [],
	"description": "This interview was conducted with a member of staff at the university who has experience with the current occupancy system.",
	"content": "Have you ever used the current system for checking room capacity? If so, how regularly do you use this system? I have tried using the system several times.\nWhat do you like about the current system? Not much, most of the rooms listed are primarily for students so doesn’t relate to myself or my colleagues.\nWhat do you not like about the current system? It seems that the majority of the time the service is down whenever I have tried it.\nDoes the current system offer all rooms you would like or are there any more rooms you would like it to extend to? It would be very useful to extend to meeting rooms in departmental buildings so I can easily check if a room is being used or not even when there are no scheduled meetings.\nAre there any more improvements that you would suggest to this system? It would be really useful to be able to see what are the busiest times so I know when is the best time to visit a room during the day.\nWhat devices will you most likely check on for a revised room occupancy system? Primarily on my computer.\nAnalysis From this interview with a university staff member, it can be seen that extending the system to more than just study spaces and reliability are the main points to improve on from the current system.\n"
},
{
	"uri": "/conceptualdesign/what-to-show/",
	"title": "What data do we want to show?",
	"tags": [],
	"description": "Given our research, what information do our potential clients and end-users want to see?",
	"content": "From our research, we now have a good idea of the short comings of the current system, what the information the users want to see and how they want to see it.\nOur users have expressed interest in a simple design showing localised occupancy and opening times. Opening times is simple to show with a table next to the occupancy data for a given space.\nLocalised occupancy can be shown in a number of ways or perhaps as a combination of multiple formats.\nThe main goal of our system is to be simple, informative and easy to use. We do not want to present the user with information in formats such as this:\nHeatmap layout This view is very Tangible with it being immediately obvious the areas of high density without the need for explicit axis or legends, although one may be included for completeness. One must also consider the case of a colour blind person who may struggle to interpret maps such as the one shown above, instead we may opt for a reduced colour pallette or commit to using multiple different information read-outs including more graphical means.\nThis sort of representation also takes up quite a lot of space in order for it to be clear. As well as it being expensive in terms of space graphics like these can be computationally expensive to generate and update / redraw.\nGauge Representation Gauges are another simple way to show relative occupancy. They clearly show the current status compared to the extremes of 0 or 100%. An array of these gauges would quickly and simply show to users the spaces with the lowest relative occupancy.\nThis format is also quite space efficient although may take longer to interpret than the heatmap above due to it being more of an abstract representation.\nOther data to present. We may also want to present historical data to our users either in the form of previous trends or predictions we have made using our database. This data could range from warnings in weeks that have historically had spikes in occupancy such as exam weeks to full occupancy number predictions based on some form of machine learning system.\nGranularity of Representation The level of data that we are representing has to govern the way in which we represent it.\nRepresenting the entire campus occupancy as a gauge would be useless and give very little insight as to how busy individual study spaces are. However, the same representation would be useful for showing the relative business of individual rooms in a building.\nAlternatively, the heatmap, shown above, provides excellent resolution for displaying whole campus occupancy as it allows for each building\u0026rsquo;s value to be displayed separately.\nIn the sketch above, you can intuitively see that the tall building has the most free space, from here you could look into which specific rooms in that building are free, this more specific data may be presented as a colour coded list or gauge, an example implementation is below:\nWe could be yet more granular showing specific seat occupancy for a given room such as in the following sketch:\nA system as high resolution as this may prove too costly to implement with it requiring sensors on a per-set basis and with some study spaces having hundreds of seats this would put high strain on the network as well as the University\u0026rsquo;s budget. A room based approach could more easily be achieved, giving an overview of a rooms business as opposed to specific free seats.\n"
},
{
	"uri": "/research/developer/",
	"title": "Interview: Developer",
	"tags": [],
	"description": "This interview was conducted with a software developer who has experience developing on top of a range of IoT devices.",
	"content": "Introduction This interview was conducted with a software developer who has experience developing on top of a range of IoT devices.\nInterview I: What possible applications could you see for an API based on top of this project? D: I could imagine a whole array of projects, this sort of data could be linked in with a wide array of functionality when it comes to actual use of the buildings. For example you could make something where if someone is looking for a study space it will tell them which ones are free, so they don\u0026rsquo;t have to spend their vital time searching for a space to sit. I can think of a whole range of applications where estates could take advantage of this data. I can imagine that room occupancy has strong correlations with other factors which they try to manage such as temperature or CO2 levels. For example if a room is very full, the amount of CO2 in a room may increase and to combat this the software could auto open windows.\nI: Do you see this technology coming in useful for research? D: Oh definitely, like I hinted about above there are loads of correlations which I suspect exist but could be proven using data from this method. This data would be able to be used for loads of different types of research looking at different trends and so on, I\u0026rsquo;m not a researcher so I would know exactly, but I can definitely see the potential. Even something like design of buildings, I know a lot of thought goes into the flow of people through a building during the design stage, but with this data it will help back up or prove assumptions about how building design affects movement of people.\nI: What do you find important when developing with an API? D: For me documentation is really important. Having good, clean, easy to read documentation makes a huge difference. Other than that just a naming scheme for your API that makes sense and can be easily guessed. Also having consistency in your API structure is very important. You don\u0026rsquo;t want some commands to be plural and some to be singular. That I do find infuriating.\nI: What do you find limiting about a poor API? D: Like I said above, lack of consistency and naming choices which are not exactly obvious. Also lack of flexibility. There is nothing worse than a super rigid API which you have to pull more data than you really need just to have to do loads of processing on your side. But also not too much flexibility where it comes confusing. I know that sounds contradictory but I guess just focus on making the main features robust and easy to use but also add in extra super flexible options to the side for the power users.\nI: Is the GUI of developer tools important to you? D: I wouldn’t say that it\u0026rsquo;s essential, I have dealt with numerous APIs in the past that don\u0026rsquo;t have a gui. There are some nice gui’s for apis out there. For example ones that help you build your queries and some that graph statistics about the queries which your users use.\nConclusion The above interview really highlights that there is a demand for this data and it is important that the data can be provided in an accessible way which makes sense and is well documented.\n"
},
{
	"uri": "/prototyping/hifi/",
	"title": "HiFi ProtoType",
	"tags": [],
	"description": "",
	"content": " "
},
{
	"uri": "/prototyping/",
	"title": "Prototyping",
	"tags": [],
	"description": "",
	"content": "  Basic InfluxDB implementation  After our initial research into InfluxDB and it\u0026rsquo;s client libraries, we decided to complete a trial implementation using Golang as it offered a fast, compiled language that lent itself well to embedded systems and has excellent networking and json parsing libraries. package main import ( \u0026#34;context\u0026#34; \u0026#34;encoding/json\u0026#34; \u0026#34;fmt\u0026#34; \u0026#34;io/ioutil\u0026#34; \u0026#34;log\u0026#34; \u0026#34;net/http\u0026#34; \u0026#34;os\u0026#34; \u0026#34;time\u0026#34; fsnotify \u0026#34;github.com/fsnotify/fsnotify\u0026#34; influxdb \u0026#34;github.com/influxdata/influxdb-client-go\u0026#34; ) var INFLUX_TOKEN string func DBConnect() (*influxdb.Client, error) { client := http.Client{} return influxdb.\n HiFi ProtoType    "
},
{
	"uri": "/conceptualdesign/user-interface/",
	"title": "User Interface",
	"tags": [],
	"description": "A look into the design of user interfaces",
	"content": "Introduction The user interface is of extreme importance to this project, as it is the portal to which the user will actually experience the product. A user interface is make or break when it comes to a users interactions and impressions of your project. If the data is there but it is tedious to access and presented in ways which are not intuitive and easy to read then people will not want to use your product. An example of this is the universities timetabling system, a system so bad users are happy to hand over their login details to a random party just so they can get out of using it.\nStanding on the shoulders of giants Some of the best design at the moment is carried out by the tech giants. Luckily for us these companies have guides on their styles and designs.\nGoogle is leading edge in design and has comprehensive guides on its style along with a number of different tools such as free icons and visually impaired friendly colour pickers. Along with a whole range of tools which allow for assessing how disability friendly your design is and helping you improve it.\nThese resources can be found at https://design.google/resources/. Many other companies have similar style guides.\nEase When it comes to UI design our main focus should be around ease of use. This can be achieved by working out which tools are important to the user and putting them as the easiest to get to.\nWith the idea of ease of use comes cleanliness. Having a clean and simple design can help with ease of use as it means that the user knows exactly where to look for what they need as they are the only things which they can see. Of course you can always go too far in the other direction and make a design which is too clean and in this case you limit the user as it hides the functionality.\nOne of the main design principles at the moment is material design. This design can be found across the google suite of products including android. This design methodology strongly follows the idea of clean and simple design in order to help the user. Everything in your design should be intuitive, removing the need for long explanatory tool tips or large manuals.\n\u0026ldquo;Great design is transparent\u0026rdquo; For our project we will be following these guides.\nColour Colour can often be overlooked as just an aesthetic choice, but colour can play a large role in guiding the user through your interface. An example of this is using a consistent colour scheme throughout your interface. Having titles in one colour, subheadings in another and buttons in another, means that the user knows exactly what they are looking at and if they can interact it just by looking at the colour.\nIt is extremely important that you think about what colours you want to use, especially as your content is going to be viewed on a number of different devices with different screens and by people with different visual abilities.\nSome colour may look great on your device but what about devices which manipulate the colour such as night light software to change the hue to a much warmer one during the night.\nOn top of this in this day and age there is a huge demand for a dark mode. Thoughts need to be given to a colour scheme which is dark and can take advantage of OLED technology to save energy.\nThe final and most important aspect of colour is visibility. The text should be easily readable. This means picking two highly contrasting colours for text and background. The higher the contrasting the easier it is to read for all abilities including those with partial sight. Google has a great tool for this which automatically picks colours for your text based on your background and will tell you how accessable they are: https://material.io/resources/color.\nPresenting Data Another aspect we have thought about is how to present the data. As seen in other sections we having explored technologies such as grafana to do this but on a much lower level we need to think about what ways we want to present data.\nThe most simplest of the methods would be a purely text based method which lists the rooms and then lists the occupancy. This approach is simple and easy to read and can often be found on websites status pages. Combined with colour it would make it the ideal choice if it was not for the fact that it struggles to scale as it can get messy with more and more locations.\nThis can be expanded if you want to represent the status over time as can be seen below:\nThe above approach gives an abstracted view of the \u0026ldquo;occupancy\u0026rdquo; however it does not provide greater details. If this is needed then a graph like the one below. This graph gives you exact details and it is easy to spot the trend. However it does take up a lot of screen real estate.\nMoving away from the more traditional types of graphs, there are heat maps. These represent the data in a way which is easy to interpret to users who are not fully aware of room names as they can see it based on the floor plan. The downside of the heatmap is that if the user just wants to find a space on campus that is free they will have to check through each of the heat maps, as opposed to a table where they can just sort it via occupancy.\nConclusion Each design has its pros and cons are serve different use cases. Management who want to monitor occupancy trends would find the graph most useful.\nStudents on the other hand looking for a room would find the just list of rooms or heatmap most useful. A compromise between the two would be the most useful. For example at the top you list the rooms which have the lowest occupancy and below you show the heatmap. Therefor the data which you are presenting to the user first which is the most important to them is a suggestion of a couple of spaces which are free, and then if they are more picky about location or not aware where the rooms are they can consult the heat map.\n"
},
{
	"uri": "/research/office/",
	"title": "Focus Group: Office workers",
	"tags": [],
	"description": "This focus group was targeted at staff from a large firm that made use of hot desking throughout a multistory building.",
	"content": "Do you have a system for tracking free space? Currently no, the system at present is:\n Teams currently get priority on some desks We have some assigned desks which can be used but have to be vacated if the assigned person turns up. Currently have to walk around to find a desk. Limited standing desks, but don\u0026rsquo;t know where they are. Desks have different facilities (screens etc), some stuff broken. Would save time by going to a desk that has everything I need. Some people go and use breakout areas as desks when it\u0026rsquo;s very busy(these have no power), study booths. None of these can be booked. Currently there is a \u0026lsquo;manager\u0026rsquo; for each breakout space you can ask what is available including what types space / desks  What detail about availability would be useful to you as a user? It would useful to know how busy each floor or area is since that would save you time in searching each area.\nWhat would be a dealbreaker when using our solution? If it became a significant portion of time that I had to stop for in the morning then I\u0026rsquo;d probably just resort to walking around.\nAre you likely to use the same desk all day? Some employees would probably use the same desk all day whereas I would likely use it for a few hours and then go out of the office for meetings. Some people would take a desk and then go into meetings for an hour while leaving their stuff at the desk.\nWould you be willing to \u0026ldquo;sign in\u0026rdquo; to a desk to mark it as taken? This sounds okay as long as people can\u0026rsquo;t reserve desks for hours - I\u0026rsquo;d still want to be able to just walk up to an empty desk and \u0026ldquo;check in\u0026rdquo;.\nHow long should people be able to book a desk for? Our study booths are only meant to be used for 2 hours at a time and we currently have no way of tracking them. Meeting rooms are effectively the same thing but these must be booked by name. If you haven\u0026rsquo;t signed into the room in the first 15 minutes of the booking then it should be reopened for booking.\nWho should be able to book a desk? It would be good for temporary contractors to be able to book space while they are there.\nWhen booking a client room you have to provide a charge code (internal charge for services provided) so this adds control to who can book the room, since they will need the budget.\nHow accurately would you like to be able to see available space? Knowing exactly what desks are free would be very useful.\nWould it be useful for other people in the office to know where you are Yes, since it would enable you to book near people in your team or book a set of desks together.\nWould you always want your location accessible? It would be useful to have a \u0026lsquo;do not disturb\u0026rsquo; setting if you wanted to work alone.\n"
},
{
	"uri": "/research/persona/",
	"title": "Persona: Peter",
	"tags": [],
	"description": "Peter is a humanities student who has a low number of contact hours",
	"content": "              Peter : Profile  Peter doens\u0026rsquo;t have lectures everyday but tries to keep up with outside reading and his assignments in the library - if he doesn\u0026rsquo;t have lectures he will try and spend a couple hours in the library to keep himself productive Peter is pretty relaxed about where he sits - as long as he has access to a computer Peter can\u0026rsquo;t afford a laptop so library computer access is very important to him Peter reads and takes out books a lot - he is a avid user on the library system Peter commutes from Redditch - he takes a train and a bus which takes around 50 mins in total one way from home to University Peter suffers from Chronic Fatigue Syndrome - he needs to sleep for 9 or 10 hours each day to feel energised.  Peter\u0026rsquo;s Situation  As the student body has grown, the availibility in the library has decreased More and more students use the library - driving the time a student has to get to the library to guarantee a seat earlier and earlier In exam season sometimes you have to arrive at 7am! Peter is never up early enough to get a seat in the library and is never aware when there are seats free Peter isn\u0026rsquo;t able to use the library as much anymore  How we could help Peter  Our product could make Peter aware of other suitable study spaces on campus It could give him the most applicable study space - such as ones fitted with general purpose computers. It would make Peter aware of the best times to come in It could alert Peter when his preferred study space is free It would cut down on his time wasted commuting and searching for a seat when coming into campus He would no longer commute and find no space for himself It would help him study efficiently  "
},
{
	"uri": "/research/ricardo_persona/",
	"title": "Persona: Ricardo",
	"tags": [],
	"description": "Ricardo is a Computer Science Student who needs lab machines for assignments",
	"content": "              Ricardo: Profile  Ricardo needs to use his department\u0026rsquo;s labs to complete assignments. Ricardo wants to be able to secure a lab machine that has working monitors. Ricardo has a laptop so is open to study spaces that don\u0026rsquo;t have computers. Ricardo lives in Selly Oak and has a 20 minute commute to the Computer Science Building.  Ricardo\u0026rsquo;s Situation  Depending on the time of year the Computer Science Labs become very busy, making it impossible to find a working machine. People often reserve a lab machine by placing a coffee cup or other personal item but do not return for multiple hours. Ricardo is struggling to complete assignments on time as he never knows when there will be space in the labs.  How we could help Ricardo  Our product could make Ricardo aware of study spaces that have computers capable to complete his assignments, being able to filter by OS and hardware specs. It would give insights on how close to capacity each study space is. It could alert Riccardo when his preferred study space is free. Ricardo will be able to find a study space efficiently and choose when to travel to university Ricardo will be able to complete his assignments on time and have more free time outside of his studies  "
},
{
	"uri": "/research/ui/",
	"title": "UI Layout",
	"tags": [],
	"description": "An in-depth look into layout",
	"content": "Introduction The layout of the UI is something which should be thought about for multiple reasons. The layout will affect what the user interact with and how easily they interact with it. A poorly laid user interface may mean that your best features never get used. In this section we are going to explore the interface for a typical student user.\nWhat\u0026rsquo;s Important? It\u0026rsquo;s important that we identify what is important to our user so we can make it available to them. According to our research, most of the users don\u0026rsquo;t care about most of the features, they just want to find a space. That\u0026rsquo;s it, any space and they will be satisfied.\nSome students identified that they wanted to find spaces in specific areas of campus or buildings.\nFirst things first As finding any space is the highest important to students, in our design we have decided to put this at the top of the page, right where the user will see when they open the app / website. This section will use an algorithm to determine which spaces the student should go to based on current/expected occupancy and even possibly taking into account the location of the student. It will then display them clearly in a listed button format, dictating the most important information: space name, building, and occupancy. If the user wants more details they can click on the button and it will take them to a view specifically for that item.\nLess Specific Locations Often students didn\u0026rsquo;t a specific room, they wanted a much wider impression of occupancy across campus. An example of this is students wanted to know what was more busy, the library or the sports center. They often didn\u0026rsquo;t much care about specific rooms but just wanted know which buildings are low occupancy.\nTo help communicate this, information will also be displayed on the main view under the specific rooms. It will show a list of each of the top occupancy for whole locations. This will allow users to know which building is best in general, instead of a specific room.\nA pro of doing building based ranking is that the occupancy will be much less volatile. The amount of people that it will take to fill up a building as opposed to a single room is much higher which means that it is less likely to change faster. This matters because a user doesn\u0026rsquo;t want to walk halfway across campus just for there space to become occupied by the time they get there.\nAn example of this can been seen below.\nSpecific Locations There will also be a list of the locations. Here the user can find the exact room they want by expanding through a series of collapsible buttons of increasing specificity. It is important that there is a balance between the number of clicks it takes to get to your item and also the number of items displayed when an item is expanded. For example you could find what you are looking for if each section is vague and therefore contains a large number of items. But this means it will take quite a bit of searching to find it in these items. You could be more specific and have each collapse only reveal a few children, however this will take a much larger number of clicks to achieve your goal.\nOne possible solution would be Campus Region -\u0026gt; Building -\u0026gt; Floor -\u0026gt; Rooms, another approach would be to go Group of Subjects -\u0026gt; Subject -\u0026gt; Building -\u0026gt; Floor -\u0026gt; Rooms. Each of these methods will have different outcomes on the end user based on how they want to use the app. For example if they know the geographical layout of the campus and only care about buildings in one specific region then the first would be faster but if they are just trying to find a room in chemistry then it would be simpler for them to use the second approach.\nTesting Whilst our research may show what the users think they want, you cant be sure that it is definitely what they want. To handle this we hope to do a variety of A/B testing of a variety of different layouts. Both in the initial sketches, put also the interactive prototypes.\nIn this testing we hope to observe a number of usability metrics to assess the designs. Some examples of these is speed and number of clicks to reach a goal. We will also interview the users to try to figure out their experience with each design. Hopefully using this information we will be able to design a product which puts the users first.\n"
},
{
	"uri": "/research/occupancy-data-interpretation/",
	"title": "Occupancy Data Interpretation",
	"tags": [],
	"description": "A look into representing occupancy",
	"content": "Percentage % This metric is similar to colour in the sense that it is abstract. It does not tell the user exactly how many seats are left but does give them an impression of room fullness. This is useful for users who only care about the feel of the room, ie how \u0026ldquo;packed it is\u0026rdquo;.\nSeats Left Seats left provides the most exact details. This metric is perfect for users who don\u0026rsquo;t really care about how full the room is just want to find a seat or a specific number of seats. This method falls short when it comes to rooms with drastically different sizes. For example if a room has 300 seats available and another has 6 then saying 3 seats left, doesn\u0026rsquo;t give a good impression of occupancy as one room is 99% full and the other is 50% full. As can be seen those rooms are not the same in fullness yet the seats left metric suggests they are equals which gives the wrong impression.\nColour Colour representations allow you to simplify information to a level where you can just glance at it to a basic insight.\nGradient A gradient of colour could be considered a seamless representation of percentage occupancy and could be applied to still provide an interpretation that can be processed from just entering the peripheral view. Traffic Light Using a \u0026ldquo;traffic light\u0026rdquo; code to indicate occupancy presents information in an already widely understood standard. Accessibility of colours Depending on colour does again introduce the accessibility issue and solving this with a different colour pallet has the potential to introduce a new issue whereby users may not understand the relation between colour and occupancy when looking directly at it, let alone in passing.\nSimplicity Colour issues Different types of colour\nSeen at a glance, not very detailed\n"
},
{
	"uri": "/research/physical-design/",
	"title": "Physical Design",
	"tags": [],
	"description": "Blending In",
	"content": "The aim of the physical devices is set and forget. Once installed in place they shouldn\u0026rsquo;t need to be touch physically and should be left alone. In this section we will look into possible designs to achieve this.\nDon\u0026rsquo;t touch A number of methods can be used to make people not tamper with objects. One of these is to make it extremely obvious that you want people not to touch it. This can be achieved by bright \u0026ldquo;warning colours\u0026rdquo; such as yellows and red and visible written or iconic warnings such as \u0026ldquo;DON\u0026rsquo;T TOUCH\u0026rdquo;. This, whilst effective, can be quite distracting, which is not something wanted in study spaces where you want people to stay focused on their work.\nAnother approach is making it so boring that people don\u0026rsquo;t want to touch it and that it blends in with the majority of the other devices around. For our prototype designs we attempted to sketch up devices that are based off existing devices found in these spaces so that they will blend in . The first of these (1) is a device which is meant to look like a powerline adapter or air freshener. The hope behind this is that people know what these items are and therefore wont be interested enough in it to mess with it. By containing an internal power supply it should reduce the number of parts that can be tampered with.\nThe second design hopes to reduce tampering altogether by removing it by arms reach. Here the unit is designed to be ceiling mounted with the power supply elsewhere. With this design the unit should become pretty much impossible to mess with for the average person. The downside of this design is that it requires significant overhead compared to the other one. Number one can just be plugged into the socket where as number two requires someone to come install it on the ceiling.\nAs can be seen in the sketch above the unit can be broken down into only a few components. A PI/Arduino as the driver, environmental sensing unit and power supply. With design one we hope to include an interchangeable power supply which can be clicked on and off without the need for rewiring the plug. This is inspired by multiple products out on the market out, such as apples mac book charger. Also note the vents in the outer box for ventilation to allow the environmental sensors to function. Below is the internals for the second design.\nWhen it comes to designing the outer case for the unit we hope to 3D print the box in two parts which can be clicked together. This can be seen below.\n"
},
{
	"uri": "/research/current-solutions/",
	"title": "Current Solutions",
	"tags": [],
	"description": "Systems currently in the market that provide ROT services",
	"content": "Density.io Density offers a solution to room occupancy monitoring that uses active IR sensors and time of flight (TOF) to detect humans entering and exiting rooms.\nAdditional features of this solution are security applications, the main being detecting ‘tailgaters’ into buildings. This is where an unauthorised visitor gains access to the building by following an authorised member in.\nA safety feature that they also offer is employee mustering, being able to detect how many people are in locations in case of evacuation.\nThe overall system boasts 97-99% accuracy.\nUsage-Based Operations Increase operational efficiency across janitorial, culinary, and facility teams with real-time usage data and predictive notifications.\nDensity also prioritises user privacy, quoting that ‘78% of surveyed employees aren’t comfortable with cameras for non-security use cases’ To combat this, density claims that they don’t capture personally identifiable information\nDensity offers a solution to room occupancy monitoring that uses active IR sensors and time of flight (TOF) to detect humans entering and exiting rooms. The overall system boasts 97-99% accuracy.\nWorkplace Use Case Additional features of this solution are security applications, the main being detecting ‘tailgaters’ into buildings. This is where an unauthorised visitor gains access to the building by following an authorised member in. A safety feature that they also offer is employee mustering, being able to detect how many people are in locations in case of evacuation. Density also prioritises user privacy, quoting that ‘78% of surveyed employees aren’t comfortable with cameras for non-security use cases’. To combat this, density claims that they don’t capture personally identifiable information.\nUniversity Use Case Density also provides solutions to many higher education institutions offering insights and reporting on overcrowding, smart space allocation based on accurate utillisation data and safety \u0026amp; security measures to monitor capacity and better prepare for emergencies.\nThis use case can also be integrated into pre-existing applications, so each institution can use Density’s platform within their campus apps. Institutions that currently use Density include, University of Notre Dame, Harvard Medical School, New York University, and The University of Arizona.\nCost One main concern about this solution is the price of implementing it. With sensors costing $495 each and the annual Enterprise Cloud Software License costing $795, cost effectiveness is not a postive trait of this solution. What we will aim to learn from this solution is to provide better value for money by being designed to be a DIY and highly configurable solution. Analysis A lot of inspiration can be drawn from this solution. Real time analytics, predictive insights on overcrowding and mobile application integration, even though this is a costly solution it provides a vast amount of services. We can try building upon this solution with the usage of additional sensors and move from working just as a virtual turnstile.\n"
},
{
	"uri": "/",
	"title": "Home",
	"tags": [],
	"description": "",
	"content": "Welcome! We are developing a Open Source Room Occupancy Tracking System for use primarily in educational institutions, providing students with accurate, real-time information on the current occupancy of study spaces across campuses.\n Team Members  Jon Freer Sam Barrett Charlie de Freitas Anant Kapoor George Wellington   Summary  Research   Conceptual Design   Technical Design   Prototyping    "
},
{
	"uri": "/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/progress/",
	"title": "Progress",
	"tags": [],
	"description": "",
	"content": " Problem outline  Why we picked this   Design  Early sketches Current concept What is currently working Critique of current concept   Research methods  Surveys Individual interviews Brainstorming Personas Desk research    gantt dateFormat DD-MM axisFormat %d/%m title Initial concept prototype and improvements section Research Research focus points :fsc1, 11-02, 3h Surveys :fsc2, after fsc1, 3h Interviews :fsc3, after fsc1, 5h Personas :fsc4, after fsc2, 2h Desk Research :fsc4, after fsc2, 2h section Conceptual Design What data to collect? :aat1, after fsc3, 3h What do we want to show? :fsc5, after fsc3, 3h section Technical Design Hardware comparison :aat2, after aat1, 3h Data collection :aat4, after aat2, 2h Data distribution :aat5, after aat2, 3h Data representation :fsc5, after aat2, 3h section Prototyping Language Choice :aat3, after aat4 aat5, 2h First device build :prt1, after aat4, 3h Metric ingress :prt2, after aat5, 3h  "
},
{
	"uri": "/conceptualdesign/topologies/sensormesh/",
	"title": "Sensor Mesh",
	"tags": [],
	"description": "Inter connected sensors relaying data across the mesh to a processing node",
	"content": "Where possible all sensors are connected to a mesh network. At the edge of each mesh is an ingress node that processes the raw sensor data. This is then streamed into the database which is made available to the user.\ngraph LR; subgraph mesh A[Sensor #1] B[Sensor #2] C[Sensor #3] A --- B A --- C C --- B end A == D B == D C == D subgraph cloud D[Ingress] E[Database] D -- E end E -- F[User Interface]  "
},
{
	"uri": "/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/conceptualdesign/topologies/tree/",
	"title": "Worker Sensors",
	"tags": [],
	"description": "Sensors feed directly into processing system",
	"content": "Each sensor unit will process the raw input and feed this directly into the data store\ngraph LR; subgraph sensors A[#1] B[#2] C[#3] end A -- D B -- D C -- D subgraph cloud D[Database] end D -- E[User Interface]  "
}]